{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Button } from 'react-native-elements';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    email: '',\n    password: '',\n    error: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  function signUp() {\n    return _signUp.apply(this, arguments);\n  }\n\n  function _signUp() {\n    _signUp = _asyncToGenerator(function* () {\n      if (value.email === '' || value.password === '') {\n        setValue(_objectSpread(_objectSpread({}, value), {}, {\n          error: 'Email and password are mandatory.'\n        }));\n        return;\n      }\n\n      try {\n        yield createUserWithEmailAndPassword(auth, value.email, value.password);\n        navigation.navigate('Sign In');\n      } catch (error) {\n        setValue(_objectSpread(_objectSpread({}, value), {}, {\n          error: error.message\n        }));\n      }\n    });\n    return _signUp.apply(this, arguments);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Signup screen!\"\n    }), !!value.error && _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        children: value.error\n      })\n    }), _jsxs(View, {\n      style: styles.controls,\n      children: [_jsx(Input, {\n        placeholder: \"Email\",\n        containerStyle: styles.control,\n        value: value.email,\n        onChangeText: function onChangeText(text) {\n          return setValue(_objectSpread(_objectSpread({}, value), {}, {\n            email: text\n          }));\n        },\n        leftIcon: _jsx(Icon, {\n          name: \"envelope\",\n          size: 16\n        })\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        containerStyle: styles.control,\n        value: value.password,\n        onChangeText: function onChangeText(text) {\n          return setValue(_objectSpread(_objectSpread({}, value), {}, {\n            password: text\n          }));\n        },\n        secureTextEntry: true,\n        leftIcon: _jsx(Icon, {\n          name: \"key\",\n          size: 16\n        })\n      }), _jsx(Button, {\n        title: \"Sign up\",\n        buttonStyle: styles.control,\n        onPress: signUp\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  controls: {\n    flex: 1\n  },\n  control: {\n    marginTop: 10\n  },\n  error: {\n    marginTop: 10,\n    padding: 10,\n    color: '#fff',\n    backgroundColor: '#D54826FF'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","Icon","Input","Button","getAuth","createUserWithEmailAndPassword","auth","SignUpScreen","navigation","useState","email","password","error","value","setValue","signUp","navigate","message","styles","container","controls","control","text","StyleSheet","create","flex","paddingTop","backgroundColor","alignItems","justifyContent","marginTop","padding","color"],"sources":["/Users/sofia.howard/cultural-survival/screens/SignUpScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input, Button } from 'react-native-elements';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n\nconst auth = getAuth();\n\nconst SignUpScreen: React.FC<StackScreenProps<any>> = ({ navigation }) => {\n  const [value, setValue] = React.useState({\n    email: '',\n    password: '',\n    error: ''\n  })\n\n  async function signUp() {\n    if (value.email === '' || value.password === '') {\n      setValue({\n        ...value,\n        error: 'Email and password are mandatory.'\n      })\n      return;\n    }\n\n    try {\n      await createUserWithEmailAndPassword(auth, value.email, value.password);\n      navigation.navigate('Sign In');\n    } catch (error) {\n      setValue({\n        ...value,\n        error: error.message,\n      })\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Signup screen!</Text>\n\n      {!!value.error && <View style={styles.error}><Text>{value.error}</Text></View>}\n\n      <View style={styles.controls}>\n        <Input\n          placeholder='Email'\n          containerStyle={styles.control}\n          value={value.email}\n          onChangeText={(text) => setValue({ ...value, email: text })}\n          leftIcon={<Icon\n            name='envelope'\n            size={16}\n          />}\n        />\n\n        <Input\n          placeholder='Password'\n          containerStyle={styles.control}\n          value={value.password}\n          onChangeText={(text) => setValue({ ...value, password: text })}\n          secureTextEntry={true}\n          leftIcon={<Icon\n            name='key'\n            size={16}\n          />}\n        />\n\n        <Button title=\"Sign up\" buttonStyle={styles.control} onPress={signUp} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  controls: {\n    flex: 1,\n  },\n\n  control: {\n    marginTop: 10\n  },\n\n  error: {\n    marginTop: 10,\n    padding: 10,\n    color: '#fff',\n    backgroundColor: '#D54826FF',\n  }\n});\n\nexport default SignUpScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}