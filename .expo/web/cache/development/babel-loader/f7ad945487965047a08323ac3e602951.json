{"ast":null,"code":"import React from 'react';\nimport \"./src/firebase/firebaseApp\";\nimport RootNavigation from \"./src/navigation\";\nimport { AppProvider } from '@realm/react';\nimport appId from \"./app.json\";\nimport baseUrl from \"./app.json\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RealmContext from \"./RealmContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RealmProvider = RealmContext.RealmProvider;\nexport default function App() {\n  return _jsx(AppProvider, {\n    id: appId,\n    baseUrl: baseUrl,\n    children: _jsx(RealmProvider, {\n      sync: {\n        flexible: true,\n        initialSubscriptions: {\n          update: function update(subs, realm) {\n            subs.add(realm.objects('Item'), {\n              name: 'ownItems'\n            });\n          }\n        }\n      },\n      fallback: function fallback() {\n        return _jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\"\n          })\n        });\n      },\n      children: _jsx(RootNavigation, {})\n    })\n  });\n}","map":{"version":3,"names":["React","RootNavigation","AppProvider","appId","baseUrl","RealmContext","RealmProvider","App","flexible","initialSubscriptions","update","subs","realm","add","objects","name"],"sources":["/Users/sofia.howard/cultural-survival/App.tsx"],"sourcesContent":["import React from 'react';\nimport './src/firebase/firebaseApp';\nimport RootNavigation from './src/navigation';\nimport {AppProvider, UserProvider, useUser} from '@realm/react';\nimport appId from './app.json';\nimport baseUrl from './app.json';\nimport {View, ActivityIndicator} from 'react-native';\nimport RealmContext from './RealmContext';\nconst {RealmProvider} = RealmContext;\n\nexport default function App() {\n  return (\n    <AppProvider id={appId} baseUrl={baseUrl}>\n      {/* After login, user will be automatically populated in realm configuration */}\n      <RealmProvider\n        sync={{\n          flexible: true,\n          initialSubscriptions: {\n            update: (subs, realm) => {\n              // subscribe to all of the logged in user's to-do items\n              subs.add(realm.objects('Item'), {name: 'ownItems'});\n            },\n          },\n        }}\n        fallback={() => (\n          <View>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        )}>\n        <RootNavigation />\n      </RealmProvider>\n    </AppProvider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA,OAAOC,cAAP;AACA,SAAQC,WAAR,QAAiD,cAAjD;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;;;AAEA,OAAOC,YAAP;;AACA,IAAOC,aAAP,GAAwBD,YAAxB,CAAOC,aAAP;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,OACE,KAAC,WAAD;IAAa,EAAE,EAAEJ,KAAjB;IAAwB,OAAO,EAAEC,OAAjC;IAAA,UAEE,KAAC,aAAD;MACE,IAAI,EAAE;QACJI,QAAQ,EAAE,IADN;QAEJC,oBAAoB,EAAE;UACpBC,MAAM,EAAE,gBAACC,IAAD,EAAOC,KAAP,EAAiB;YAEvBD,IAAI,CAACE,GAAL,CAASD,KAAK,CAACE,OAAN,CAAc,MAAd,CAAT,EAAgC;cAACC,IAAI,EAAE;YAAP,CAAhC;UACD;QAJmB;MAFlB,CADR;MAUE,QAAQ,EAAE;QAAA,OACR,KAAC,IAAD;UAAA,UACE,KAAC,iBAAD;YAAmB,IAAI,EAAC;UAAxB;QADF,EADQ;MAAA,CAVZ;MAAA,UAeE,KAAC,cAAD;IAfF;EAFF,EADF;AAsBD"},"metadata":{},"sourceType":"module"}